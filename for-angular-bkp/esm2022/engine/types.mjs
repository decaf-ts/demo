export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/lib/engine/types.ts"],"names":[],"mappings":"","sourcesContent":["import { IonCheckbox, IonInput, IonSelect, IonTextarea } from '@ionic/angular';\nimport { TextFieldTypes } from '@ionic/core';\nimport { FormGroup } from '@angular/forms';\nimport { BaseCustomEvent, FormServiceControl, InputOption } from './interfaces';\n\n\n\nexport type HandlerLike = Record<string, (...args: unknown[]) => unknown | Promise<unknown>>\n\n/**\n * @description Generic key-value pair type\n * @summary Represents a generic object with string keys and any type of values.\n * This is commonly used for dynamic data structures where the properties are not known at compile time.\n * @typedef {Record<string, any>} KeyValue\n * @memberOf module:engine\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type KeyValue = Record<string, any>;\n\n/**\n * @description Generic function type\n * @summary Represents a function that accepts any number of arguments of any type\n * and returns any type. This is useful for defining function parameters or variables\n * where the exact function signature is not known at compile time.\n * @typedef FunctionLike\n * @memberOf module:engine\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FunctionLike = (...args: any[]) => any;\n\n/**\n * @description Element size options for UI components\n * @summary Defines the possible size values that can be applied to UI elements.\n * These sizes control the dimensions and layout behavior of components.\n * @typedef {('small'|'medium'|'large'|'xlarge'|'2xlarge'|'auto'|'expand'|'block')} ElementSizes\n * @memberOf module:engine\n */\nexport type ElementSizes =\n  | 'small'\n  | 'medium'\n  | 'large'\n  | 'xlarge'\n  | '2xlarge'\n  | 'auto'\n  | 'expand'\n  | 'block';\n\n/**\n * @description Basic position options for UI elements\n * @summary Defines the possible position values that can be applied to UI elements.\n * These positions control the alignment and placement of components.\n * @typedef {('left'|'center'|'right'|'top'|'bottom')} ElementPositions\n * @memberOf module:engine\n */\nexport type ElementPositions = 'left' | 'center' | 'right' | 'top' | 'bottom';\n\n/**\n * @description Extended position options for flex layouts\n * @summary Extends the basic ElementPositions with additional flex-specific position values.\n * These positions are used for controlling alignment and distribution in flex containers.\n * @typedef {(ElementPositions|'stretch'|'middle'|'around'|'between')} FlexPositions\n * @memberOf module:engine\n */\nexport type FlexPositions =\n  | ElementPositions\n  | 'stretch'\n  | 'middle'\n  | 'around'\n  | 'between';\n\n/**\n * @description Update mode options for form fields\n * @summary Defines when form field values should be updated in the model.\n * - 'change': Update on every change event\n * - 'blur': Update when the field loses focus\n * - 'submit': Update only when the form is submitted\n * @typedef {('change'|'blur'|'submit')} FieldUpdateMode\n * @memberOf module:engine\n */\nexport type FieldUpdateMode = 'change' | 'blur' | 'submit';\n\n\n\n/**\n * @description Interface for models that can be rendered\n * @summary Defines the basic structure for models that can be rendered by the engine.\n * Contains an optional rendererId that uniquely identifies the rendered instance.\n * @interface RenderedModel\n * @property {string} [rendererId] - Optional unique ID for the rendered model instance\n * @memberOf module:engine\n */\nexport interface RenderedModel {\n  rendererId?: string;\n}\n\n/**\n * @description Possible input types for form fields\n * @summary Defines the possible input types that can be used in form fields.\n * Includes standard HTML input types like checkbox, radio, and select,\n * as well as Ionic's TextFieldTypes and textarea.\n * @typedef {('checkbox'|'radio'|'select'|TextFieldTypes|'textarea')} PossibleInputTypes\n * @memberOf module:engine\n */\nexport type PossibleInputTypes =\n  | 'checkbox'\n  | 'radio'\n  | 'select'\n  | TextFieldTypes\n  | 'textarea';\n\n/**\n * @description Field definition for Angular components\n * @summary A comprehensive type that combines properties from various Ionic components\n * to define the structure of a field in an Angular form. It omits certain properties\n * from IonInput, picks specific properties from IonSelect, IonTextarea, and IonCheckbox,\n * and adds custom properties like type and className.\n * @typedef {Object} AngularFieldDefinition\n * @property {PossibleInputTypes} type - The type of input field\n * @property {string|string[]} className - CSS class name(s) for the field\n * @property {string} [cancelText] - Text for the cancel button (from IonSelect)\n * @property {string} [interface] - Interface style for select (from IonSelect)\n * @property {string} [selectedText] - Text for selected option (from IonSelect)\n * @property {Object} [interfaceOptions] - Options for the interface (from IonSelect)\n * @property {number} [rows] - Number of rows for textarea (from IonTextarea)\n * @property {number} [cols] - Number of columns for textarea (from IonTextarea)\n * @property {string} [alignment] - Alignment of checkbox (from IonCheckbox)\n * @property {string} [justify] - Justification of checkbox (from IonCheckbox)\n * @property {boolean} [checked] - Whether checkbox is checked (from IonCheckbox)\n * @memberOf module:engine\n */\nexport type AngularFieldDefinition = Omit<\n  IonInput,\n  | 'ionInput'\n  | 'ionFocus'\n  | 'ionChange'\n  | 'ionBlur'\n  | 'getInputElement'\n  | 'setFocus'\n  | 'label'\n  | 'el'\n  | 'z'\n  | 'type'\n> &\n  Pick<\n    IonSelect,\n    'cancelText' | 'interface' | 'selectedText' | 'interfaceOptions'\n  > &\n  Pick<IonTextarea, 'rows' | 'cols'> &\n  Pick<IonCheckbox, 'alignment' | 'justify' | 'checked'> & {\n  type: PossibleInputTypes;\n  className: string | string[];\n} & Record<string, unknown>;\n\n/**\n * @description String or boolean representation of a boolean value\n * @summary Represents a value that can be either a boolean or a string representation of a boolean.\n * This is useful for handling attribute values that can be specified as either strings or booleans.\n * @typedef {('true'|'false'|boolean)} StringOrBoolean\n * @memberOf module:engine\n */\nexport type StringOrBoolean = 'true' | 'false' | boolean;\n\n\n/**\n * @description Option type for CRUD field inputs\n * @summary Represents a union type that can be either a SelectOption or RadioOption.\n * This is used for defining options in form fields that support both select and radio input types.\n * @typedef {(SelectOption|RadioOption)} CrudFieldOption\n * @memberOf module:engine\n */\nexport type CrudFieldOption = SelectOption | RadioOption;\n\n/**\n * @description Option type for select inputs\n * @summary Extends the InputOption interface with a selected property to indicate\n * whether the option is selected by default.\n * @memberOf module:engine\n */\nexport type SelectOption = InputOption & { selected?: boolean };\n\n/**\n * @description Option type for radio inputs\n * @summary Extends the InputOption interface with a checked property to indicate\n * whether the option is checked by default.\n * @memberOf module:engine\n */\nexport type RadioOption = InputOption & { checked?: boolean };\n\n/**\n * @description Option type for checkbox inputs\n * @summary Alias for RadioOption, as checkbox options have the same structure as radio options.\n * @typedef {RadioOption} CheckboxOption\n * @memberOf module:engine\n */\nexport type CheckboxOption = RadioOption;\n\n\n\n/**\n * @description Target options for HTML forms\n * @summary Defines the possible target values for HTML forms, including standard targets\n * like '_blank', '_self', '_parent', and '_top', as well as custom string values.\n * @typedef {('_blank'|'_self'|'_parent'|'_top'|string)} HTMLFormTarget\n * @memberOf module:engine\n */\nexport type HTMLFormTarget = '_blank' | '_self' | '_parent' | '_top' | string;\n\n// export interface IListItemProp {\n//   render?: string | boolean;\n//   translateProps?: string | string[];\n//   button?: StringOrBoolean;\n//   icon?: string;\n//   iconSlot?: 'start' | 'end';\n//   title?: string;\n//   descritpion?: string;\n//   info?: string;\n//   subinfo?: string;\n// }\n\n\n\n/**\n * @description Type for form service controls\n * @summary Defines the structure of form controls managed by the form service.\n * It's a nested record where the outer key is the form group name, the inner key\n * is the control name, and the value contains the form group and field properties.\n * @typedef {Record<string, Record<string, { control: FormGroup; props: AngularFieldDefinition }>>} FormServiceControls\n * @memberOf module:engine\n */\nexport type FormServiceControls = Record<\n  string,\n  Record<string, FormServiceControl>\n>;\n\n/**\n * @description Renderer custom event type\n * @summary Combines BaseCustomEvent with KeyValue properties to create a flexible\n * custom event type for renderer components. This allows events to carry both\n * standard event properties and additional custom data.\n * @typedef RendererCustomEvent\n * @memberOf module:engine\n */\nexport type RendererCustomEvent = BaseCustomEvent & KeyValue;\n\n\n/**\n * @description CRUD form event type\n * @summary Extends BaseCustomEvent to include optional handlers for CRUD form operations.\n * This event type is used for form-related actions like create, read, update, and delete operations.\n * @typedef CrudFormEvent\n * @property {Record<string, any>} [handlers] - Optional handlers for form operations\n * @memberOf module:engine\n */\nexport type CrudFormEvent = BaseCustomEvent & {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handlers?: Record<string, any>;\n};\n\n\n/**\n * @description Form parent group tuple\n * @summary Represents a tuple containing a FormGroup and its associated string identifier.\n * This is used for managing hierarchical form structures and parent-child relationships.\n * @typedef {[FormGroup, string]} FormParentGroup\n * @memberOf module:engine\n */\nexport type FormParentGroup = [FormGroup,  string];\n\n"]}