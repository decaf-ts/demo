;
;
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../../src/lib/engine/interfaces.ts"],"names":[],"mappings":"AAiFC,CAAC;AAcD,CAAC","sourcesContent":["import { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { ElementRef, EnvironmentInjector, Injector, Type } from '@angular/core';\nimport { OrderDirection } from '@decaf-ts/core';\nimport { AngularFieldDefinition, FieldUpdateMode, KeyValue, StringOrBoolean } from './types';\nimport { FieldProperties } from '@decaf-ts/ui-decorators';\n\n/**\n * @description Interface for components that hold an ElementRef\n * @summary Defines a component holder interface that provides access to the underlying DOM element through ElementRef\n * @interface IComponentHolder\n * @memberOf module:engine\n */\nexport interface IComponentHolder {\n  /**\n   * @description Reference to the component's DOM element\n   * @property {ElementRef} component - The ElementRef instance providing access to the native DOM element\n   */\n  component: ElementRef;\n}\n\n/**\n * @description Interface for form components that hold both an ElementRef and a FormGroup\n * @summary Extends IComponentHolder to include a FormGroup for form handling capabilities\n * @interface IFormElement\n * @memberOf module:engine\n */\nexport interface IFormElement extends IComponentHolder {\n  /**\n   * @description The Angular FormGroup associated with this form element\n   * @property {FormGroup|undefined} formGroup - The form group instance for managing form controls and validation\n   */\n  formGroup: FormGroup | undefined;\n}\n\n\n/**\n * @description Interface for fieldset item representation in the UI.\n * @summary Defines the structure for items displayed in the reorderable list within the fieldset.\n * Each item represents a value added to the fieldset with display properties for the UI.\n * @memberOf module:engine\n */\nexport interface IFieldSetItem {\n  /** @description Sequential index number for ordering items in the list */\n  index: number;\n  /** @description Primary display text for the item */\n  title: string;\n  /** @description Optional secondary text providing additional item details */\n  description?: string;\n}\n\n/**\n * @description Interface for fieldset validation event data.\n * @summary Defines the structure of validation events emitted when form validation occurs.\n * Used for communication between form components and the fieldset container.\n * @memberOf module:engine\n */\nexport interface IFieldSetValidationEvent {\n  /** @description The FormGroup containing the validated form controls */\n  formGroup:  FormArray | FormGroup;\n  /** @description The current form value being validated */\n  value: unknown;\n  /** @description Whether the form validation passed or failed */\n  isValid: boolean;\n}\n\n\n/**\n * @description Interface for individual filter query items\n * @summary Defines the structure of a single filter criterion in a filter query.\n * Each item represents one condition to be applied to the data, consisting of\n * an index (field name), a condition (comparison operator), and a value to compare against.\n * @interface IFilterQueryItem\n * @property {string} [index] - Optional field name or index to filter on\n * @property {string} [condition] - Optional comparison condition (e.g., 'Equal', 'Contains', 'Greater Than')\n * @property {string} [value] - Optional value to compare the field against\n * @memberOf module:engine\n */\nexport interface IFilterQueryItem {\n  index?: string,\n  condition?: string,\n  value?: string\n};\n\n/**\n * @description Interface for sorting configuration objects\n * @summary Defines the structure for specifying sort criteria including the field\n * to sort by and the direction of the sort (ascending or descending).\n * @interface ISortObject\n * @property {string} value - The field name or property to sort by\n * @property {OrderDirection} direction - The sort direction (ASC or DSC)\n * @memberOf module:engine\n */\nexport interface ISortObject {\n  value: string,\n  direction: OrderDirection\n};\n\n/**\n * @description Interface for complete filter query configuration\n * @summary Defines the complete structure for filter and sort operations.\n * Combines multiple filter criteria with sorting configuration to provide\n * comprehensive data filtering and ordering capabilities.\n * @interface IFilterQuery\n * @property {IFilterQueryItem[] | undefined} query - Array of filter criteria or undefined for no filtering\n * @property {ISortObject} sort - Sorting configuration specifying field and direction\n * @memberOf module:engine\n */\nexport interface IFilterQuery {\n  query: IFilterQueryItem[] | undefined,\n  sort: ISortObject\n}\n\n\n/**\n * @description Component input properties\n * @summary Extends FieldProperties with additional properties specific to Angular components.\n * Includes update mode for form controls and optional FormGroup and FormControl references.\n * @interface IComponentInput\n * @property {FieldUpdateMode} [updateMode] - When the field value should be updated\n * @property {FormGroup} [formGroup] - Optional FormGroup reference\n * @property {FormControl} [formControl] - Optional FormControl reference\n * @memberOf module:engine\n */\nexport interface IComponentInput extends FieldProperties {\n  updateMode?: FieldUpdateMode;\n  formGroup?: FormGroup;\n  formControl?: FormControl;\n}\n\n/**\n * @description Component configuration structure\n * @summary Defines the configuration for dynamically creating Angular components.\n * Contains the component name, input properties, injector, and optional child components.\n * @interface IComponentConfig\n * @property {string} component - The name of the component to render\n * @property {IComponentInput} inputs - The input properties for the component\n * @property {EnvironmentInjector | Injector} injector - The Angular injector for dependency injection\n * @property {IComponentConfig[]} [children] - Optional child component configurations\n * @memberOf module:engine\n */\nexport interface IComponentConfig {\n  component: string;\n  inputs: IComponentInput;\n  injector: EnvironmentInjector | Injector;\n  children?: IComponentConfig[];\n}\n\n/**\n * @description Metadata structure for Angular components\n * @summary Defines the structure of metadata for Angular components, including\n * change detection strategy, selector, standalone status, imports, template, and styles.\n * This is used for reflection and dynamic component creation.\n * @interface ComponentMetadata\n * @property {number} changeDetection - The change detection strategy number\n * @property {string} selector - The CSS selector for the component\n * @property {boolean} standalone - Whether the component is standalone\n * @property imports - Array of imported modules/components\n * @property {string} template - The HTML template for the component\n * @property {string[]} styles - Array of CSS styles for the component\n * @memberOf module:engine\n */\nexport interface ComponentMetadata {\n  changeDetection: number;\n  selector: string;\n  standalone: boolean;\n  imports: (new (...args: unknown[]) => unknown)[];\n  template: string;\n  styles: string[];\n}\n\n\n/**\n * @description Output structure from the Angular rendering engine\n * @summary Defines the structure of the output produced by the NgxRenderingEngine\n * when rendering a component. Contains the component type, inputs, injector,\n * content nodes, and child components.\n * @typedef {Object} AngularDynamicOutput\n * @property {Type<unknown>} component - The Angular component type\n * @property {string} [rendererId] - Optional unique ID for the rendered component\n * @property {Record<string, unknown>} [inputs] - Optional input properties for the component\n * @property {Injector} [injector] - Optional Angular injector for dependency injection\n * @property {Node[][]} [content] - Optional content nodes for projection\n * @property {AngularDynamicOutput[]} [children] - Optional child components\n * @property {Type<unknown>} [instance] - Optional component instance\n * @property {FormGroup} [formGroup] - Optional component FormGroup\n * @property {FormControl} [formControl] - Optional component FormControl\n * @memberOf module:engine\n */\nexport interface AngularDynamicOutput {\n  component?: Type<unknown>;\n  rendererId?: string;\n  inputs?: Record<string, unknown>;\n  injector?: Injector;\n  content?: Node[][];\n  children?: AngularDynamicOutput[];\n  instance?: Type<unknown>;\n  formGroup?: FormGroup;\n  formControl?: FormControl;\n}\n\n\n/**\n * @description Base option type for input components\n * @summary Defines the common structure for options used in select, radio, and checkbox inputs.\n * Contains properties for the display text, value, disabled state, CSS class, and icon.\n * @interface InputOption\n * @property {string} text - The display text for the option\n * @property {string|number} value - The value associated with the option\n * @property {StringOrBoolean} [disabled] - Whether the option is disabled\n * @property {string} [className] - CSS class name for styling the option\n * @property {string} [icon] - Icon to display with the option\n * @memberOf module:engine\n */\nexport interface InputOption {\n  text: string;\n  value: string | number;\n  disabled?: StringOrBoolean;\n  className?: string;\n  icon?: string;\n}\n\n/**\n * @description Interface for list component refresh events\n * @summary Defines the structure of a refresh event for list components.\n * Contains an array of key-value pairs representing the new data for the list.\n * @interface IListComponentRefreshEvent\n * @property {KeyValue[]} data - Array of key-value pairs representing the new data\n * @memberOf module:engine\n */\nexport interface IListComponentRefreshEvent {\n  data: KeyValue[];\n}\n\n\n/**\n * @description Form service control structure\n * @summary Defines the structure for a form control managed by the form service.\n * Contains the FormGroup control and the associated field properties for rendering.\n * @interface FormServiceControl\n * @property {FormGroup} control - The Angular FormGroup for the control\n * @property {AngularFieldDefinition} props - The field properties for rendering the control\n * @memberOf module:engine\n */\nexport interface FormServiceControl {\n  control: FormGroup;\n  props: AngularFieldDefinition;\n}\n\n\n/**\n * @description Interface for list item custom events\n * @summary Defines the structure of custom events triggered by list items.\n * Extends BaseCustomEvent with additional properties for the action and primary key.\n * @interface ListItemCustomEvent\n * @property {string} action - The action performed on the list item\n * @property {string} [pk] - Optional primary key of the affected item\n * @property {any} data - The data associated with the event (inherited from BaseCustomEvent)\n * @property {HTMLElement} [target] - The target element (inherited from BaseCustomEvent)\n * @property {string} [name] - The name of the event (inherited from BaseCustomEvent)\n * @property {string} component - The component that triggered the event (inherited from BaseCustomEvent)\n * @memberOf module:engine\n */\nexport interface ListItemCustomEvent extends BaseCustomEvent {\n  action: string;\n  pk?: string;\n}\n\n\n/**\n * @description Base interface for custom events\n * @summary Defines the base structure for custom events in the application.\n * Contains properties for the event data, target element, name, and component.\n * @interface BaseCustomEvent\n * @property {any} data - The data associated with the event\n * @property {HTMLElement} [target] - The target element that triggered the event\n * @property {string} [name] - The name of the event\n * @property {string} component - The component that triggered the event\n * @memberOf module:engine\n */\nexport interface BaseCustomEvent {\n  name: string;\n  component: string;\n  data?: unknown;\n  target?: HTMLElement;\n}\n\n\n/**\n * Configuration for internationalization (i18n) resource file paths.\n *\n * @property prefix - The prefix to be used for the resource file path.\n * @property suffix - The suffix to be appended to the resource file path.\n */\nexport interface I18nResourceConfig { prefix: string, suffix: string }\n"]}